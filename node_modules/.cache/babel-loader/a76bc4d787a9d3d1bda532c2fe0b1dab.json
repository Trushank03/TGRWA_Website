{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/DiracAI-Services/Base_Website/src/MainApps/Dashboard/General/Notices/NoticeBoxContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport classes from './NoticeBoxContainer.module.css';\nimport NoticeBox from './NoticeBox';\nimport { marknoticeasread, marknoticeasunread } from '../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction containsObject(obj, list) {\n  var i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].id === obj.id) {\n      return true;\n    }\n  }\n  return false;\n}\nconst NoticeBoxContainer = props => {\n  _s();\n  //console.log(\"NoticeBox Container rendering. . .\");\n\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n      isMounted.current = false;\n      props.passMountInfo(false);\n    };\n  }, [props]);\n  const markAsReadHandler = noticeId => {\n    marknoticeasread({\n      noticeId,\n      props\n    });\n  };\n  const markAsUnReadHandler = noticeId => {\n    marknoticeasunread({\n      noticeId,\n      props\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.noticeBoxContainer,\n    children: props.dashboardNotice !== null && props.dashboardNotice.map((notice, index) => {\n      let noticeId = notice.id;\n      return /*#__PURE__*/_jsxDEV(NoticeBox, {\n        read: notice.read,\n        Notice: notice,\n        markAsRead: () => markAsReadHandler(noticeId),\n        markAsUnread: () => markAsUnReadHandler(noticeId),\n        rerender: props.rerender,\n        userData: props.userData\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 1\n  }, this);\n};\n_s(NoticeBoxContainer, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n_c = NoticeBoxContainer;\nexport default NoticeBoxContainer;\nvar _c;\n$RefreshReg$(_c, \"NoticeBoxContainer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","classes","NoticeBox","marknoticeasread","marknoticeasunread","jsxDEV","_jsxDEV","containsObject","obj","list","i","length","id","NoticeBoxContainer","props","_s","isMounted","current","passMountInfo","markAsReadHandler","noticeId","markAsUnReadHandler","className","noticeBoxContainer","children","dashboardNotice","map","notice","index","read","Notice","markAsRead","markAsUnread","rerender","userData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bibhu/DiracAI-Services/Base_Website/src/MainApps/Dashboard/General/Notices/NoticeBoxContainer.js"],"sourcesContent":["import React,{useRef,useEffect, useState} from 'react';\nimport classes from './NoticeBoxContainer.module.css';\nimport NoticeBox from './NoticeBox';\nimport { marknoticeasread,marknoticeasunread} from '../../../../CommonApps/AllAPICalls';\n\n\n\nfunction containsObject(obj, list) {\n\n\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].id === obj.id) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\n\n\n\n\nconst NoticeBoxContainer =(props)=>{\n\n\n   //console.log(\"NoticeBox Container rendering. . .\");\n\n\n   const isMounted = useRef(false);\n\n    useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n            isMounted.current = false\n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n   const markAsReadHandler=(noticeId)=>{\n\t   marknoticeasread({noticeId,props});\t  \n   }\n\n\n  const markAsUnReadHandler=(noticeId)=>{\n           marknoticeasunread({noticeId,props});\n   }\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.noticeBoxContainer}>\n\n\n\n\n\n\n\n   {  props.dashboardNotice !==null && props.dashboardNotice.map((notice, index)=>{\n\n         let noticeId = notice.id;\n         return <NoticeBox read={notice.read}\n\t                   Notice={notice}\n\t                   key={index}\n\t                   markAsRead={()=>markAsReadHandler(noticeId)}\n\t                   markAsUnread={()=>markAsUnReadHandler(noticeId)}\n\t                   rerender={props.rerender}\n\t                   userData={props.userData}\n\t\t   />\n\n\n   }) \n\n\n\n   }\n\n\n\n\n\n\n</div>\n\n);\n\n}\n\n\nexport default NoticeBoxContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,MAAM,EAACC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACtD,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,gBAAgB,EAACC,kBAAkB,QAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxF,SAASC,cAAcA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAG/B,IAAIC,CAAC;EACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAC9B,IAAID,IAAI,CAACC,CAAC,CAAC,CAACE,EAAE,KAAKJ,GAAG,CAACI,EAAE,EAAE;MACvB,OAAO,IAAI;IACf;EACJ;EAEA,OAAO,KAAK;AAChB;AAOA,MAAMC,kBAAkB,GAAGC,KAAK,IAAG;EAAAC,EAAA;EAGhC;;EAGA,MAAMC,SAAS,GAAGlB,MAAM,CAAC,KAAK,CAAC;EAE9BC,SAAS,CAAC,MAAM;IAChBiB,SAAS,CAACC,OAAO,GAAG,IAAI;IACxBH,KAAK,CAACI,aAAa,CAAC,IAAI,CAAC;IACzB,OAAO,MAAM;MACLF,SAAS,CAACC,OAAO,GAAG,KAAK;MACzBH,KAAK,CAACI,aAAa,CAAC,KAAK,CAAC;IAClC,CAAC;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAMX,MAAMK,iBAAiB,GAAEC,QAAQ,IAAG;IACnCjB,gBAAgB,CAAC;MAACiB,QAAQ;MAACN;IAAK,CAAC,CAAC;EACnC,CAAC;EAGF,MAAMO,mBAAmB,GAAED,QAAQ,IAAG;IAC7BhB,kBAAkB,CAAC;MAACgB,QAAQ;MAACN;IAAK,CAAC,CAAC;EAC5C,CAAC;EAUJ,oBAEAR,OAAA;IAAKgB,SAAS,EAAErB,OAAO,CAACsB,kBAAmB;IAAAC,QAAA,EAQrCV,KAAK,CAACW,eAAe,KAAI,IAAI,IAAIX,KAAK,CAACW,eAAe,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAG;MAEzE,IAAIR,QAAQ,GAAGO,MAAM,CAACf,EAAE;MACxB,oBAAON,OAAA,CAACJ,SAAS;QAAC2B,IAAI,EAAEF,MAAM,CAACE,IAAK;QACzBC,MAAM,EAAEH,MAAO;QAEfI,UAAU,EAAEA,CAAA,KAAIZ,iBAAiB,CAACC,QAAQ,CAAE;QAC5CY,YAAY,EAAEA,CAAA,KAAIX,mBAAmB,CAACD,QAAQ,CAAE;QAChDa,QAAQ,EAAEnB,KAAK,CAACmB,QAAS;QACzBC,QAAQ,EAAEpB,KAAK,CAACoB;MAAS,GAJpBN,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKvB;IAGJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAWC;AAIN,CAAC;AAAAvB,EAAA,CA5EKF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AA+ExB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}