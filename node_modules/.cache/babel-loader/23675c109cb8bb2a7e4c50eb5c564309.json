{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/OneQuestionGrouped.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport classes from './ParagraphSections.module.css';\nimport { BsCaretDownFill, BsFillCircleFill } from 'react-icons/bs';\nimport OneOption from './OneOption';\nimport { deleteaquestion } from '../CommonApps/AllAPICalls';\nimport OutsideAlerter from '../CommonApps/OutsideAlerter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OneQuestion = props => {\n  _s();\n  const [showDropDown, setShowDropDown] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [selectedText, setSelectedText] = useState(null);\n  let InActiveColor = {\n    color: \"grey\",\n    marginRight: \"10px\",\n    fontWeight: \"normal\"\n  };\n  let activeColor = {\n    color: \"var(--themeColor)\",\n    marginRight: \"10px\",\n    fontWeight: \"bold\"\n  };\n  const showDropDownHandler = () => {\n    setShowDropDown(showDropDown => !showDropDown);\n  };\n  const selectOptionHandler = option => {\n    setSelectedId(selectedId => option.id);\n    setSelectedText(selectedText => option.answerText);\n    let one_Question = {\n      \"questionId\": props.question.id,\n      \"answerId\": option.id\n    };\n    props.pushSelectedAnswer(one_Question);\n    setShowDropDown(false);\n  };\n  useEffect(() => {\n    setSelectedId(selectedId => null);\n    setSelectedText(selectedText => null);\n  }, [props.paragraphId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.oneQuestion,\n    style: {\n      display: \"inline\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: classes.oneQuestionText,\n      children: [props.question.questionText, props.question !== null && props.question.anoptions.length !== 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [\" \", props.question.questionNum + \". \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dropDownOptionButtonDiv,\n      children: [props.question !== null && props.question.anoptions.length !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.oneQuestionOptionsButton,\n        onClick: showDropDownHandler,\n        children: [selectedId === null && /*#__PURE__*/_jsxDEV(BsCaretDownFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 31\n        }, this), selectedId !== null && /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", selectedText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this), showDropDown && /*#__PURE__*/_jsxDEV(OutsideAlerter, {\n        setDropDown: setShowDropDown,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdownAnswerOptions,\n          children: props.question.anoptions.map((option, index) => {\n            let optionId = option.id;\n            return /*#__PURE__*/_jsxDEV(OneOption, {\n              option: option,\n              selectOptionHandler: () => selectOptionHandler(option),\n              optionColor: selectedId === optionId ? activeColor : InActiveColor,\n              oneExamData: props.oneExamData\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 55\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 14\n  }, this);\n};\n_s(OneQuestion, \"oUxroNb/oHZ93RQA4z12CQujKXg=\");\n_c = OneQuestion;\nexport default OneQuestion;\nvar _c;\n$RefreshReg$(_c, \"OneQuestion\");","map":{"version":3,"names":["useState","useEffect","classes","BsCaretDownFill","BsFillCircleFill","OneOption","deleteaquestion","OutsideAlerter","jsxDEV","_jsxDEV","OneQuestion","props","_s","showDropDown","setShowDropDown","selectedId","setSelectedId","selectedText","setSelectedText","InActiveColor","color","marginRight","fontWeight","activeColor","showDropDownHandler","selectOptionHandler","option","id","answerText","one_Question","question","pushSelectedAnswer","paragraphId","className","oneQuestion","style","display","children","oneQuestionText","questionText","anoptions","length","marginLeft","questionNum","fileName","_jsxFileName","lineNumber","columnNumber","dropDownOptionButtonDiv","type","oneQuestionOptionsButton","onClick","setDropDown","dropdownAnswerOptions","map","index","optionId","optionColor","oneExamData","_c","$RefreshReg$"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/OneQuestionGrouped.js"],"sourcesContent":["\nimport {useState, useEffect} from 'react';\nimport classes from './ParagraphSections.module.css';\nimport {BsCaretDownFill, BsFillCircleFill} from 'react-icons/bs';\n\nimport OneOption from './OneOption';\n\n\nimport {deleteaquestion} from '../CommonApps/AllAPICalls';\n\n\nimport OutsideAlerter from '../CommonApps/OutsideAlerter';\n\n\n\nconst OneQuestion=(props)=>{\n    \n\n\n    const [showDropDown, setShowDropDown] = useState(false);\n\n    const [selectedId, setSelectedId] = useState(null);\n    const [selectedText, setSelectedText] = useState(null);\n\n    let InActiveColor={color:\"grey\", marginRight:\"10px\",fontWeight:\"normal\"};\n    let activeColor = {color:\"var(--themeColor)\", marginRight:\"10px\",fontWeight:\"bold\"};\n\n    const showDropDownHandler=()=>{\n\n       setShowDropDown(showDropDown=>!showDropDown);\n    \n    }\n\n    const selectOptionHandler=(option)=>{\n      setSelectedId(selectedId=>option.id);\n      setSelectedText(selectedText=>option.answerText);\n      let one_Question = {\"questionId\": props.question.id,\"answerId\": option.id}\n\n      props.pushSelectedAnswer(one_Question); \t    \n      setShowDropDown(false);\n\n    }\n\n    useEffect(()=>{\n\n      setSelectedId(selectedId=>null);\n      setSelectedText(selectedText=>null);\n\n    },[props.paragraphId]);\n\n\n\n\n    return   <div className={classes.oneQuestion} style={{display:\"inline\"}}>\n                              <i className={classes.oneQuestionText}> \n\t                          {props.question.questionText} \n\t                          { props.question !== null && props.question.anoptions.length !== 0 &&\n\n\t\t\t\t\t<span style={{marginLeft:\"10px\"}}> {props.question.questionNum+\". \"}</span>\n\n\t\t\t\t  }\n\t\t              </i>\n\n                              <div className={classes.dropDownOptionButtonDiv}>  \n\n\t\t                { props.question !== null && props.question.anoptions.length !== 0 &&\n\n                                   <button type=\"button\" className={classes.oneQuestionOptionsButton} onClick={showDropDownHandler}>\n                                            { selectedId ===null &&\n\t\t                            <BsCaretDownFill /> \n                                            }\n\t                                    { selectedId !==null &&\n\n                                              <b> {selectedText} </b>\n\t\t\t\t\t    }\n\n\t\t                   </button>\n\n\n\t\t\t        }\t\t\n\n                                { showDropDown &&\n\n                                    <OutsideAlerter setDropDown={setShowDropDown}>\n\n\t\t\t               <div className={classes.dropdownAnswerOptions}>\n\n\n                                        { props.question.anoptions.map((option, index)=>{\n\n\t\t\t\t\t      let optionId = option.id;\n\n                                               return <OneOption key={index} \n\t\t\t\t\t\t                 option={option} \n\t\t\t\t\t\t                 selectOptionHandler={()=>selectOptionHandler(option)}\n\t\t\t\t\t\t                 optionColor={ selectedId === optionId ? activeColor: InActiveColor }\n\t\t\t\t\t\t                 oneExamData={props.oneExamData}\n\t\t\t\t\t\t\t         />\n\n\t\t\t\t           })\n\n\t\t\t\t        }\n\n                                       </div>\n\n\t\t\t\t    </OutsideAlerter>\n\n                                 }\n                              </div>\n\n              </div>\n\n\n}\n\nexport default OneQuestion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}