{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/OneWritingTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport classes from './WritingTest.module.css';\nimport { TextAreaInput } from '../CommonApps/FormInputObjects';\nimport { addwritingtaskresponse } from '../CommonApps/AllAPICalls';\nimport InfoHeader from './InfoHeader';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OneWritingTask = props => {\n  _s();\n\n  const [wordCount, setWordCount] = useState(0);\n  const initialFormData = Object.freeze({\n    paragraphText: \"\"\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    setWordCount(wordCount => formData.paragraphText.split(\" \").length);\n  };\n\n  console.log(\"formData: \", formData);\n\n  const renderer = _ref => {\n    let {\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref;\n\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Over \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    } else {\n      // Render a countdown\n      if (minutes === 0) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: \"red\",\n            color: \"white\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\"\n          },\n          children: [\" \", minutes, \":\", seconds, \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", minutes, \":\", seconds, \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }, this);\n      }\n    }\n  };\n\n  let reTime = Number(props.OneTask.duration) * 60 * 1000;\n  console.log(\"writing duration: \", props.OneTask.duration);\n  console.log(\"Date.now(): \", Date.now());\n  let timePrep = Date.now() + reTime;\n\n  const nextSecHandler = () => {\n    let writingTaskId = props.OneTask.id;\n    let responseId = props.responseId;\n    let paragraphText = formData.paragraphText;\n\n    if (paragraphText == \"\") {\n      alert(\"Enter some text in the box\");\n      return null;\n    }\n\n    addwritingtaskresponse({\n      writingTaskId,\n      responseId,\n      paragraphText,\n      props\n    }); // props.nextSecHandler();\n  };\n\n  console.log(\"paragraph: \", formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.oneWritingTask,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.writingTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", props.OneTask.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"  Time  remaining:\", /*#__PURE__*/_jsxDEV(Countdown, {\n            date: timePrep,\n            renderer: renderer,\n            onComplete: nextSecHandler\n          }, props.OneTask.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.nextSectionButton,\n          onClick: nextSecHandler,\n          children: \" NEXT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.textQuestionBoxes,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textQuestionBoxLeft,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"var(--themeColor)\",\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Read the following information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 8\n        }, this), props.OneTask.questionText1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textQuestionBoxRight,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.questionTextArea2,\n          children: props.OneTask.questionText2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          children: [\"Word Count: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: wordCount + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"paragraphText\",\n          type: \"text\",\n          onChange: handleChange,\n          className: classes.input_field_textarea,\n          style: {\n            fontSize: \"16px\",\n            padding: \"20px\"\n          },\n          placeholder: \"Dear Sir ..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 13\n  }, this);\n};\n\n_s(OneWritingTask, \"AL0nQ5HuuPqGL0iuzPGinqy5Dvg=\");\n\n_c = OneWritingTask;\nexport default OneWritingTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneWritingTask\");","map":{"version":3,"names":["useState","classes","TextAreaInput","addwritingtaskresponse","InfoHeader","Countdown","OneWritingTask","props","wordCount","setWordCount","initialFormData","Object","freeze","paragraphText","formData","updateFormData","handleChange","e","target","name","value","split","length","console","log","renderer","hours","minutes","seconds","completed","background","color","paddingLeft","paddingRight","reTime","Number","OneTask","duration","Date","now","timePrep","nextSecHandler","writingTaskId","id","responseId","alert","oneWritingTask","writingTitle","title","nextSectionButton","textQuestionBoxes","textQuestionBoxLeft","marginBottom","questionText1","textQuestionBoxRight","questionTextArea2","questionText2","marginLeft","input_field_textarea","fontSize","padding"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/OneWritingTask.js"],"sourcesContent":["import {useState} from 'react';\nimport classes from './WritingTest.module.css';\n\nimport {TextAreaInput} from '../CommonApps/FormInputObjects';\nimport {addwritingtaskresponse} from '../CommonApps/AllAPICalls';\n\nimport InfoHeader from './InfoHeader';\n\nimport Countdown from 'react-countdown';\n\nconst OneWritingTask=(props)=>{\n\n\n  const [wordCount, setWordCount] = useState(0);\n\n  const initialFormData = Object.freeze({\n        paragraphText: \"\",\n        });\n\n  const [formData, updateFormData] = useState(initialFormData);\n\n\n  const handleChange=(e)=>{\n\n\n\n      updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value,\n                });\n\n     setWordCount(wordCount=>formData.paragraphText.split(\" \").length);\n\n    }\n\n    console.log(\"formData: \", formData);\n\n\n     const renderer = ({ hours, minutes, seconds, completed }) => {\n      if (completed) {\n       // Render a completed state\n\n         return <div> Over </div>\n\n       } else {\n       // Render a countdown\n        if (minutes ===0){\n              return <span style={{background:\"red\", color:\"white\",paddingLeft:\"10px\", paddingRight:\"10px\"}}> {minutes}:{seconds} mins</span>;\n         } else{\n\n              return <span> {minutes}:{seconds} mins</span>;\n         }\n       }\n     };\n\n\n\n\n\n    let reTime = Number(props.OneTask.duration)*60*1000;\n    console.log(\"writing duration: \", props.OneTask.duration)\n    console.log(\"Date.now(): \", Date.now());\n \n    let timePrep = Date.now()+reTime ;\n\n\n    const nextSecHandler =()=>{\n\n      let writingTaskId = props.OneTask.id;\n      let responseId = props.responseId;\n      let paragraphText = formData.paragraphText; \n\n      if (paragraphText == \"\"){\n\n\t alert(\"Enter some text in the box\");\n\t return null;\n\n      }\n\n      addwritingtaskresponse({writingTaskId, responseId, paragraphText, props});\n\n      // props.nextSecHandler();\n\n\n    }    \n\n\n    console.log(\"paragraph: \", formData);\n\n\n\n\nreturn      <div className={classes.oneWritingTask}>\n              <div className={classes.writingTitle}>\n                        <span> <b> {props.OneTask.title} </b></span>\n                        <div>\n                           \n                           <span>  Time  remaining:\n                              <Countdown date={timePrep}\n                             renderer={renderer}\n                             onComplete={nextSecHandler}\n                             key={props.OneTask.id}\n                            />\n\n                           </span>\n\n                           <button type=\"button\" className={classes.nextSectionButton} onClick={nextSecHandler}> NEXT </button>\n                        </div>\n\n              </div>\n\n\n              <div className={classes.textQuestionBoxes}>\n              \n\t\t  <div className={classes.textQuestionBoxLeft}> \n\t\t     <div style={{color:\"var(--themeColor)\",marginBottom:\"20px\"}}><b> Read the following information</b></div> \n                     \n\t\t     {props.OneTask.questionText1}\n\t\t  </div>\n\n\n                  <div className={classes.textQuestionBoxRight}> \n\n\t\t  <div className={classes.questionTextArea2}>\n                     \n\t\t     {props.OneTask.questionText2}\n                  </div>\n\n                  <div style={{marginLeft:\"20px\"}}>\n                  Word Count: <span style={{color:\"red\"}}>{wordCount+1}</span>\n                  </div>\n\t\t <textarea\n\t            name=\"paragraphText\"\n                    type=\"text\"\n\t            onChange={handleChange}\n                    className={classes.input_field_textarea}\n                    style={{fontSize: \"16px\",padding:\"20px\"}}\n\t            placeholder=\"Dear Sir ..\"\n                   />\n\t\t  \n\t\t  </div>\n\n              </div>\n\n\n    </div>\n\n   \n\n}\n\n\nexport default OneWritingTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}