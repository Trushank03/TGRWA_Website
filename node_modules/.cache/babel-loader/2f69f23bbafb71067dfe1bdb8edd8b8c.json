{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/MainApps/Meetings/components/TopToolBoxV1.js\";\nimport React, { useState, memo } from 'react';\nimport classes from './TopToolBoxV1.module.css';\nimport { BsLayoutTextSidebarReverse } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopToolBoxV1 = props => {\n  console.log(\"Top One Tool Box Rendering\");\n  const TheIcon = props.icon;\n  //let Icon={props.toolBoxStyle.icon}\n\n  const sectionHandler = () => {\n    props.onPress();\n  };\n\n  //<TheIcon className={classes.toolBoxIcon} style={{color:props.toolBoxStyle.iconColor}}/>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.parentDivBtn,\n    children: [props.notificationNum !== \"0\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.notificationBox,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: props.notificationNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.topToolBoxV1,\n      onClick: sectionHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: \"none\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          fontSize: \"var(--topRightButtonTextFontSize_Course)\",\n          color: props.toolBoxStyle.iconTitleColor\n        },\n        children: props.iconName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.highLightDiv,\n      style: {\n        background: props.toolBoxStyle.highLightColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this);\n};\n_c = TopToolBoxV1;\nexport default _c2 = /*#__PURE__*/memo(TopToolBoxV1);\nvar _c, _c2;\n$RefreshReg$(_c, \"TopToolBoxV1\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","memo","classes","BsLayoutTextSidebarReverse","jsxDEV","_jsxDEV","TopToolBoxV1","props","console","log","TheIcon","icon","sectionHandler","onPress","className","parentDivBtn","children","notificationNum","notificationBox","fileName","_jsxFileName","lineNumber","columnNumber","topToolBoxV1","onClick","style","borderStyle","margin","display","justifyContent","fontSize","color","toolBoxStyle","iconTitleColor","iconName","highLightDiv","background","highLightColor","_c","_c2","$RefreshReg$"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/MainApps/Meetings/components/TopToolBoxV1.js"],"sourcesContent":["import React,{useState,memo} from 'react';\nimport classes from './TopToolBoxV1.module.css';\nimport {BsLayoutTextSidebarReverse} from 'react-icons/bs';\n\n\n\nconst TopToolBoxV1=(props)=>{\n\nconsole.log(\"Top One Tool Box Rendering\");\n\n\nconst TheIcon = props.icon;\n//let Icon={props.toolBoxStyle.icon}\n\n\n\n\n const sectionHandler=()=>{\n    props.onPress();\n\n }\n\n\n//<TheIcon className={classes.toolBoxIcon} style={{color:props.toolBoxStyle.iconColor}}/>\n\nreturn (\n\n<div className={classes.parentDivBtn}>\n\n   { props.notificationNum !==\"0\" &&\t\n   <div className={classes.notificationBox}>\n      <i>{props.notificationNum}</i>\n   </div>\n   }\n  <button className={classes.topToolBoxV1} onClick={sectionHandler}>\n      <div  style={{borderStyle: \"none\", \n\t\t      margin:\"auto\", \n\t\t      display:\"flex\",\n\t\t      justifyContent:\"center\",\n\t\t      fontSize:\"var(--topRightButtonTextFontSize_Course)\",\n\t\t      color:props.toolBoxStyle.iconTitleColor}}\n\t              >\n\t{props.iconName}\n      </div>\t\n  </button>\n  \n  <div className={classes.highLightDiv} style={{background: props.toolBoxStyle.highLightColor}}>\n\n  </div>\t\n  \n</div>\n\n);\n\n}\n\nexport default memo(TopToolBoxV1);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,IAAI,QAAO,OAAO;AACzC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAAQC,0BAA0B,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1D,MAAMC,YAAY,GAAEC,KAAK,IAAG;EAE5BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAGzC,MAAMC,OAAO,GAAGH,KAAK,CAACI,IAAI;EAC1B;;EAKC,MAAMC,cAAc,GAACA,CAAA,KAAI;IACtBL,KAAK,CAACM,OAAO,EAAE;EAElB,CAAC;;EAGF;;EAEA,oBAEAR,OAAA;IAAKS,SAAS,EAAEZ,OAAO,CAACa,YAAa;IAAAC,QAAA,GAEhCT,KAAK,CAACU,eAAe,KAAI,GAAG,iBAC9BZ,OAAA;MAAKS,SAAS,EAAEZ,OAAO,CAACgB,eAAgB;MAAAF,QAAA,eACrCX,OAAA;QAAAW,QAAA,EAAIT,KAAK,CAACU;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eAEPjB,OAAA;MAAQS,SAAS,EAAEZ,OAAO,CAACqB,YAAa;MAACC,OAAO,EAAEZ,cAAe;MAAAI,QAAA,eAC7DX,OAAA;QAAMoB,KAAK,EAAE;UAACC,WAAW,EAAE,MAAM;UAC/BC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAC,MAAM;UACdC,cAAc,EAAC,QAAQ;UACvBC,QAAQ,EAAC,0CAA0C;UACnDC,KAAK,EAACxB,KAAK,CAACyB,YAAY,CAACC;QAAc,CAAE;QAAAjB,QAAA,EAE/CT,KAAK,CAAC2B;MAAQ;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eAETjB,OAAA;MAAKS,SAAS,EAAEZ,OAAO,CAACiC,YAAa;MAACV,KAAK,EAAE;QAACW,UAAU,EAAE7B,KAAK,CAACyB,YAAY,CAACK;MAAc;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAIN,CAAC;AAAAgB,EAAA,GAhDKhC,YAAY;AAkDlB,eAAAiC,GAAA,gBAAetC,IAAI,CAACK,YAAY,CAAC;AAAC,IAAAgC,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}