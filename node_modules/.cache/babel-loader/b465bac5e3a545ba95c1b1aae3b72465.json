{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/DiracAI-Services/Base_Website/src/TestSite/OneSpeakingTask.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport classes from './WritingTest.module.css';\nimport { TextAreaInput } from '../CommonApps/FormInputObjects';\nimport Countdown from 'react-countdown';\nimport { BsStopwatch } from 'react-icons/bs';\nimport { FaMicrophoneAlt } from 'react-icons/fa';\nimport { addspeakingtaskresponse } from '../CommonApps/AllAPICalls';\n\n//import { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\n\n//import { fetchFile } from '@ffmpeg/ffmpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OneSpeakingTask = props => {\n  _s();\n  const [selectedAudioFile, setSelectedAudioFile] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      const chunks = [];\n      recorder.addEventListener(\"dataavailable\", event => {\n        chunks.push(event.data);\n      });\n      recorder.addEventListener(\"stop\", () => {\n        const audioBlob = new Blob(chunks, {\n          type: 'audio/mpeg-3'\n        });\n        console.log(\"audoBlob\", audioBlob);\n        let responseId = props.responseId;\n        let speakingTaskId = props.OneTask.id;\n        const formData = new FormData();\n        let audioFileName = 'File' + String(speakingTaskId) + \"_\" + String(responseId) + 'audio.mp3';\n        formData.append('audioFile', audioBlob, audioFileName);\n        //formData.append('audioFile', selectedAudioFile.image[0]);\n        formData.append('speakingTaskId', speakingTaskId);\n        addspeakingtaskresponse({\n          responseId,\n          formData,\n          props\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        const downloadLink = document.createElement('a');\n        downloadLink.href = audioUrl;\n        downloadLink.download = 'audio.mp3';\n        document.body.appendChild(downloadLink);\n\n        //console.log(\"downloaded link: \", downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        setAudioChunks([]);\n        setMediaRecorder(null);\n      });\n      recorder.start();\n    });\n  };\n  const handleChangeAudioFile = e => {\n    if (e.target && e.target.files[0]) {\n      if (e.target.name === 'audioFile') {\n        setSelectedAudioFile({\n          image: e.target.files\n        });\n      }\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n  };\n  const [rerender, setRerender] = useState(false);\n\n  //  useEffect(()=>{\n  //   console.log(\"recording started\");\n  //startRecording();\n  // },[rerender]);\n\n  const RerenderHandler = () => {\n    setRerender(rerender => !rerender);\n  };\n  console.log(\"audioChunks:::::::::;: \", audioChunks);\n  const handleChange = () => {};\n  const renderer = _ref => {\n    let {\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref;\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Over \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this);\n    } else {\n      // Render a countdown\n      if (minutes === 0) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", minutes, \":\", seconds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 92\n          }, this), \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 22\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", minutes, \":\", seconds, \" mins \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 22\n        }, this);\n      }\n    }\n  };\n  let prep_time = Date.now() + Number(props.OneTask !== null ? props.OneTask.preparation_time : 0) * 60 * 1000;\n  let record_time = Date.now() + Number(props.OneTask !== null ? props.OneTask.recording_time : 0) * 60 * 1000;\n  const [recordTimer, setRecordTimer] = useState(false);\n  useEffect(() => {\n    setRecordTimer(false);\n  }, [props.OneTask.id]);\n  const moveToRecordCountHandler = () => {\n    setRecordTimer(true);\n    startRecording();\n  };\n  const nextSecHandler = () => {\n    if (!recordTimer) {\n      setRecordTimer(true);\n      startRecording();\n    }\n    if (recordTimer) {\n      stopRecording();\n      props.nextSecHandler();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.oneWritingTask,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.writingTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", props.OneTask.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Preparartion Time : \", props.OneTask.preparation_time, \" mins \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          children: [\" Recording Time : \", props.OneTask.recording_time, \" mins \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.nextSectionButton,\n          onClick: nextSecHandler,\n          children: \" NEXT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.textQuestionBoxes,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textQuestionBoxLeft,\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.audioSpeakerBox,\n          children: [!recordTimer && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginRight: \"10px\"\n              },\n              children: \" Preparation time \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BsStopwatch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n              date: prep_time,\n              renderer: renderer,\n              onComplete: moveToRecordCountHandler\n            }, props.OneTask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), recordTimer && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginRight: \"10px\"\n              },\n              children: \" Speak now \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FaMicrophoneAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n              date: record_time,\n              renderer: renderer,\n              onComplete: nextSecHandler\n            }, props.OneTask.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"var(--themeColor)\",\n            marginBottom: \"20px\",\n            marginTop: \"30px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", props.OneTask.questionText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 90\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 12\n        }, this), props.OneTask.imageFile !== null && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.userImage,\n          src: props.OneTask.imageFile,\n          alt: \"edr Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(OneSpeakingTask, \"EnA29oqQhEBdNlJLyaTZmie+NpE=\");\n_c = OneSpeakingTask;\nexport default OneSpeakingTask;\nvar _c;\n$RefreshReg$(_c, \"OneSpeakingTask\");","map":{"version":3,"names":["useState","useEffect","useRef","classes","TextAreaInput","Countdown","BsStopwatch","FaMicrophoneAlt","addspeakingtaskresponse","jsxDEV","_jsxDEV","Fragment","_Fragment","OneSpeakingTask","props","_s","selectedAudioFile","setSelectedAudioFile","mediaRecorder","setMediaRecorder","audioChunks","setAudioChunks","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","recorder","MediaRecorder","chunks","addEventListener","event","push","data","audioBlob","Blob","type","console","log","responseId","speakingTaskId","OneTask","id","formData","FormData","audioFileName","String","append","audioUrl","URL","createObjectURL","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","start","handleChangeAudioFile","e","target","files","name","image","stopRecording","stop","rerender","setRerender","RerenderHandler","handleChange","renderer","_ref","hours","minutes","seconds","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","paddingLeft","paddingRight","prep_time","Date","now","Number","preparation_time","record_time","recording_time","recordTimer","setRecordTimer","moveToRecordCountHandler","nextSecHandler","className","oneWritingTask","writingTitle","title","marginLeft","nextSectionButton","onClick","textQuestionBoxes","textQuestionBoxLeft","width","audioSpeakerBox","marginRight","date","onComplete","marginBottom","marginTop","questionText","imageFile","userImage","src","alt","_c","$RefreshReg$"],"sources":["/home/bibhu/DiracAI-Services/Base_Website/src/TestSite/OneSpeakingTask.js"],"sourcesContent":["import {useState,useEffect, useRef} from 'react';\nimport classes from './WritingTest.module.css';\nimport {TextAreaInput} from '../CommonApps/FormInputObjects';\nimport Countdown from 'react-countdown';\nimport {BsStopwatch} from 'react-icons/bs';\n\nimport {FaMicrophoneAlt} from 'react-icons/fa';\n\nimport {addspeakingtaskresponse} from '../CommonApps/AllAPICalls';\n\n//import { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\n\n//import { fetchFile } from '@ffmpeg/ffmpeg';\n\n\nconst OneSpeakingTask=(props)=>{\n\n\n\n\n\n\n   const [selectedAudioFile, setSelectedAudioFile] = useState(null);\n\n   const [mediaRecorder, setMediaRecorder] = useState(null);\n   const [audioChunks, setAudioChunks] = useState([]);\n   const startRecording = () => {\n   navigator.mediaDevices.getUserMedia({ audio: true })\n    .then(stream => {\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      const chunks = [];\n      \n      recorder.addEventListener(\"dataavailable\", event => {\n        chunks.push(event.data);\n      });\n\n      recorder.addEventListener(\"stop\", () => {\n        const audioBlob = new Blob(chunks, { type: 'audio/mpeg-3' });\n\n\tconsole.log(\"audoBlob\", audioBlob);\n\tlet responseId = props.responseId;\n        let speakingTaskId = props.OneTask.id;\n        const formData = new FormData();\n\tlet audioFileName='File'+String(speakingTaskId)+\"_\"+String(responseId)+'audio.mp3';      \n        formData.append('audioFile', audioBlob,audioFileName);\n        //formData.append('audioFile', selectedAudioFile.image[0]);\n        formData.append('speakingTaskId',speakingTaskId );\n        addspeakingtaskresponse({responseId, formData, props});\n\n\n\n\n\n\n\n        const audioUrl = URL.createObjectURL(audioBlob);\n        const downloadLink = document.createElement('a');\n        downloadLink.href = audioUrl;\n        downloadLink.download = 'audio.mp3';\n        document.body.appendChild(downloadLink);\n\n        //console.log(\"downloaded link: \", downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        setAudioChunks([]);\n        setMediaRecorder(null);\n      });\n\n      recorder.start();\n    });\n  };\n\n  const handleChangeAudioFile=(e)=>{\n\n       if(e.target && e.target.files[0]){\n\n            if(e.target.name === 'audioFile' ){\n\n                  setSelectedAudioFile({\n                        image: e.target.files\n                  });\n\n            }\n\n       }\n\n    }\n\n\n\n\n\n\n\n\n  const stopRecording = () => {\n    mediaRecorder.stop();\n\n\n  };\n\n\t\n\n\n\n   const [rerender, setRerender] = useState(false);\n\n   //  useEffect(()=>{\n   //   console.log(\"recording started\");\n      //startRecording();\n   // },[rerender]);\n\n\n   const RerenderHandler=()=>{\n      setRerender(rerender=>!rerender);\n   }\n\n   console.log(\"audioChunks:::::::::;: \", audioChunks);\n\n\n   const handleChange=()=>{\n\n   }\n\n   const renderer = ({ hours, minutes, seconds, completed }) => {\n      if (completed) {\n       // Render a completed state\n         return <div> Over </div>\n\n       } else {\n       // Render a countdown\n        if (minutes ===0){\n              return <span style={{ color:\"red\",paddingLeft:\"10px\", paddingRight:\"10px\"}}> <b> {minutes}:{seconds}</b> mins</span>;\n         } else{\n\n              return <span> {minutes}:{seconds} mins </span>;\n         }\n       }\n     };\n\n\n   let prep_time = Date.now() + Number(props.OneTask !==null ? props.OneTask.preparation_time : 0 )*60*1000;\n\n\n   let record_time =  Date.now() + Number(props.OneTask !==null ? props.OneTask.recording_time : 0 )*60*1000;\n\n\n   const [recordTimer, setRecordTimer] = useState(false);\t\n\n\n    useEffect(()=>{\n        setRecordTimer(false);\n    },[props.OneTask.id]);\n   \n         \n       \n\n    const moveToRecordCountHandler=()=>{\n      setRecordTimer(true);\n      startRecording();\n    }\n\n\n    const nextSecHandler=()=>{\n\n\n       if(!recordTimer){\n           setRecordTimer(true);\n\t   startRecording();\n       }\n       if(recordTimer){\n\t  stopRecording();     \n\t  props.nextSecHandler();\n       }\n\n    }\n\n\n\n\n\n\n\n\n\n\n\nreturn  <div className={classes.oneWritingTask}>\n\n              <div className={classes.writingTitle}>\n                        <span> <b> {props.OneTask.title} </b></span>\n                        <div>\n                           <span> Preparartion Time : {props.OneTask.preparation_time} mins </span>\n                           <span style={{marginLeft:\"20px\"}}> Recording Time : {props.OneTask.recording_time} mins </span>\n                           <button type=\"button\" className={classes.nextSectionButton} onClick={nextSecHandler}> NEXT </button>\n                        </div>\n\n\n              </div>\n\n\n              <div className={classes.textQuestionBoxes} >\n              \n\t\t  <div className={classes.textQuestionBoxLeft} style={{width: \"100%\"}}>\n                   \n\t\t        <div className={classes.audioSpeakerBox}>\n                            { !recordTimer && <>\n\t\t              <div style={{marginRight:\"10px\"}}> Preparation time </div>\t\t         \n                              <BsStopwatch/>\n\t\t             \n\t\t              <Countdown date={prep_time}\n                                  renderer={renderer}\n\t                          onComplete={moveToRecordCountHandler}\n                                  key={props.OneTask.id}\n                                 />\n\t\t\t      </>\t   \n                            }\n\n\t\t            {  recordTimer &&\n\n\t                       <>\n\t\t\t       <div style={{marginRight:\"10px\"}}> Speak now </div>\t\t\n                                                            \n\n\t\t\t       <FaMicrophoneAlt/>\n                               <Countdown date={record_time}\n                                  renderer={renderer}\n                                  onComplete={nextSecHandler}\n                                  key={props.OneTask.id}\n                                 />\n\t\t\t       </>\t\t    \n                            }\n                                              \n                         \n                        </div>\n\n\t\t         <div style={{color:\"var(--themeColor)\",marginBottom:\"20px\",marginTop:\"30px\"}}><b> {props.OneTask.questionText}</b></div> \n                     \n                         { props.OneTask.imageFile !==null && \n\t          \t         <img className={classes.userImage} src={props.OneTask.imageFile} alt='edr Logo' />\n                         }\n\n\n\n\n                     \n\n\n\n\t\t  </div>\n\n              </div>\n\n\n    </div>\n\n\n\n}\n\n\nexport default OneSpeakingTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}