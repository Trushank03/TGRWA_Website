{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/MainApps/Dashboard/General/components/Teacher/Exams/OneListeningTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport classes from './ParagraphSections.module.css';\nimport AddQuestionSection from './Forms/AddQuestionListeningTask';\nimport { getlisteningtaskquestions, deletealisteningtask } from '../../../../../../CommonApps/AllAPICalls';\nimport OneQuestion from './OneQuestion';\nimport { BsCaretDownFill } from 'react-icons/bs';\nimport GroupQuestionsForm from './Forms/GroupQuestionsForm';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OneListeningTask = props => {\n  _s();\n\n  const [showQuestionAddForm, setShowQuestionAddForm] = useState(false); //onClick={addQuestionHandler(paragraphId)\n\n  const addQuestionHandler = paragraphId => {\n    setShowQuestionAddForm(true);\n  };\n\n  const [reloadQuestions, setReloadQuestions] = useState(false);\n\n  const closeFormHandler = () => {\n    setShowQuestionAddForm(false);\n    setReloadQuestions(reloadQuestions => !reloadQuestions);\n  };\n\n  const [questionsData, getQuestionsData] = useState(null);\n  useEffect(() => {\n    let listeningTaskId = props.OneTask.id;\n    getlisteningtaskquestions({\n      listeningTaskId,\n      getQuestionsData\n    });\n  }, [props.OneTask, reloadQuestions]);\n  console.log(\"questionsData: \", questionsData);\n\n  const deleteParagraphHandler = () => {\n    let listeningTaskId = props.OneTask.id;\n    deletealisteningtask({\n      listeningTaskId,\n      props\n    });\n  };\n\n  const reloadHandler = () => {\n    setReloadQuestions(reloadQuestions => !reloadQuestions);\n  };\n\n  const [showGroupQuestionsForm, setShowGroupQuestionsForm] = useState(false);\n\n  const groupQuestionsHandler = () => {\n    setShowGroupQuestionsForm(true);\n  };\n\n  const closeGroupQuestionFormHandler = () => {\n    setShowGroupQuestionsForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.oneParaSection,\n    children: [showQuestionAddForm && /*#__PURE__*/_jsxDEV(AddQuestionSection, {\n      onPress: closeFormHandler,\n      listeningTaskId: props.OneTask.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 20\n    }, this), showGroupQuestionsForm && /*#__PURE__*/_jsxDEV(GroupQuestionsForm, {\n      onPress: closeGroupQuestionFormHandler,\n      questionsData: questionsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paraTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [props.OneTask.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: deleteParagraphHandler,\n        style: {\n          cursor: \"pointer\"\n        },\n        children: \" Delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Preparation Time : \", props.OneTask.preparation_time, \" mins \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paragraphTextSec,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paragraphTextSec_margin,\n          children: [\"  \", props.OneTask.instructionText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), props.OneTask.instructionImage !== null && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.listeningImage,\n          src: props.OneTask.instructionImage,\n          alt: \"edr Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Audio/Video File \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.audioFilePlay,\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            url: props.OneTask.audioFile,\n            width: \"100%\",\n            height: \"100%\",\n            controls: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paragraphQuestionSec,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.addQuestionButton,\n          onClick: addQuestionHandler,\n          children: \" +Add a question \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.allQuestionsOneSec,\n          children: questionsData !== null && questionsData.map((question, index) => {\n            return /*#__PURE__*/_jsxDEV(OneQuestion, {\n              question: question,\n              reload: reloadHandler\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 1\n  }, this);\n};\n\n_s(OneListeningTask, \"+aiL1/btlnVVDwwfRiuLxfYwzLw=\");\n\n_c = OneListeningTask;\nexport default OneListeningTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneListeningTask\");","map":{"version":3,"names":["useState","useEffect","classes","AddQuestionSection","getlisteningtaskquestions","deletealisteningtask","OneQuestion","BsCaretDownFill","GroupQuestionsForm","ReactPlayer","OneListeningTask","props","showQuestionAddForm","setShowQuestionAddForm","addQuestionHandler","paragraphId","reloadQuestions","setReloadQuestions","closeFormHandler","questionsData","getQuestionsData","listeningTaskId","OneTask","id","console","log","deleteParagraphHandler","reloadHandler","showGroupQuestionsForm","setShowGroupQuestionsForm","groupQuestionsHandler","closeGroupQuestionFormHandler","oneParaSection","paraTitle","title","cursor","preparation_time","content","paragraphTextSec","paragraphTextSec_margin","instructionText","instructionImage","listeningImage","audioFilePlay","audioFile","paragraphQuestionSec","addQuestionButton","allQuestionsOneSec","map","question","index"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/MainApps/Dashboard/General/components/Teacher/Exams/OneListeningTask.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport classes from './ParagraphSections.module.css';\n\nimport AddQuestionSection from './Forms/AddQuestionListeningTask';\n\nimport {getlisteningtaskquestions, deletealisteningtask} from '../../../../../../CommonApps/AllAPICalls';\n\nimport OneQuestion from './OneQuestion';\nimport {BsCaretDownFill} from 'react-icons/bs';\n\n\nimport GroupQuestionsForm from './Forms/GroupQuestionsForm';\n\nimport ReactPlayer from 'react-player';\n\n\n\n\nconst OneListeningTask=(props)=>{\n\n\n\n    const [showQuestionAddForm, setShowQuestionAddForm] = useState(false);\n\n    //onClick={addQuestionHandler(paragraphId)\n\n    const addQuestionHandler=(paragraphId)=>{\n      setShowQuestionAddForm(true);\n    }\n\n    const [reloadQuestions, setReloadQuestions] = useState(false);\n\n    const closeFormHandler=()=>{\n      setShowQuestionAddForm(false);\n      setReloadQuestions(reloadQuestions=>!reloadQuestions);\n    }\n\n    const [questionsData, getQuestionsData] = useState(null);\n\n    useEffect(()=>{\n\n       let listeningTaskId = props.OneTask.id;\t   \n       getlisteningtaskquestions({listeningTaskId, getQuestionsData});\n\n    },[props.OneTask, reloadQuestions]);\n\n\n\n   console.log(\"questionsData: \", questionsData);\n\n   const deleteParagraphHandler=()=>{\n       let listeningTaskId=props.OneTask.id;\n       deletealisteningtask({listeningTaskId, props});\n   }\n\n\n   const reloadHandler=()=>{\n\n    setReloadQuestions(reloadQuestions=>!reloadQuestions);\n    \n   }\n\n\n   const [showGroupQuestionsForm, setShowGroupQuestionsForm] = useState(false);\n\n   const groupQuestionsHandler=()=>{\n\n     setShowGroupQuestionsForm(true);\n\n   }\t\n\n\n   const closeGroupQuestionFormHandler=()=>{\n\n   setShowGroupQuestionsForm(false);\n   }\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n\n<div  className={classes.oneParaSection}>\n\n\n                { showQuestionAddForm &&\n\n                   <AddQuestionSection onPress = {closeFormHandler}\n                                 listeningTaskId={props.OneTask.id}\n                               />\n\n                }\n\n\n                { showGroupQuestionsForm &&\n\n\n                   <GroupQuestionsForm onPress={closeGroupQuestionFormHandler}\n\t\t\t               questionsData={questionsData}\n\t\t\t\t       />\n\n\n\n\t\t}\n\n\n\n\n                  <div className={classes.paraTitle}>\n                        <span> <b>{props.OneTask.title} </b></span>\n\t                <button type=\"button\" onClick={deleteParagraphHandler} style={{cursor:\"pointer\"}}> Delete </button>\n                        <span> Preparation Time : {props.OneTask.preparation_time} mins </span>\n                  </div>\n                  <div className={classes.content}>\n                        <div className={classes.paragraphTextSec}>\n\n\n                            <div className={classes.paragraphTextSec_margin}>  {props.OneTask.instructionText} </div>\n\n                            { props.OneTask.instructionImage !==null &&\n\t                       <img className={classes.listeningImage} src={props.OneTask.instructionImage} alt='edr Logo' />\n\t\t\t    }\n\t                    \n\n\t                    <div> Audio/Video File </div>\n\t                    <div className={classes.audioFilePlay}>\n\t                    <ReactPlayer url={props.OneTask.audioFile} width=\"100%\" height=\"100%\" controls={true} />\n                            </div>  \n\n                        </div>\n\n                        <div className={classes.paragraphQuestionSec}>\n\n                           <button type=\"button\" className={classes.addQuestionButton} onClick={addQuestionHandler}> +Add a question </button>\n\n                           \n\n                           <div className={classes.allQuestionsOneSec}>\n\n\n\n                            { questionsData !==null && questionsData.map((question, index)=>{\n\n\n                             return <OneQuestion key={index}\n\t\t\t\t                 question={question}\n\t\t\t\t                 reload={reloadHandler}\n\t\t\t\t\t    />\n\n\n\t\t\t    })\n\n\t\t\t    }\n\n\n\t                   </div>\n\n                        </div>\n                  </div>\n                  </div>\n\n\n\n\n\n\n\n\n);\n\n\n\n\n\n\n}\n\nexport default OneListeningTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}