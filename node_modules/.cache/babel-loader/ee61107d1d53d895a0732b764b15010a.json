{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/OneWritingTask.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport classes from './WritingTest.module.css';\nimport { TextAreaInput } from '../CommonApps/FormInputObjects';\nimport { addwritingtaskresponse } from '../CommonApps/AllAPICalls';\nimport InfoHeader from './InfoHeader';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OneWritingTask = props => {\n  _s();\n  const [wordCount, setWordCount] = useState(0);\n  const initialFormData = Object.freeze({\n    paragraphText: \"\"\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n  useEffect(() => {\n    updateFormData(initialFormData);\n  }, [props.OneTask.id]);\n  const handleChange = e => {\n    updateFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setWordCount(wordCount => formData.paragraphText.split(\" \").length);\n  };\n  console.log(\"formData: \", formData);\n  const renderer = _ref => {\n    let {\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref;\n    if (completed) {\n      // Render a completed state\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Over \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    } else {\n      // Render a countdown\n      if (minutes === 0) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: \"red\",\n            color: \"white\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\"\n          },\n          children: [\" \", minutes, \":\", seconds, \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", minutes, \":\", seconds, \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this);\n      }\n    }\n  };\n  let reTime = Number(props.OneTask.duration) * 60 * 1000;\n  console.log(\"writing duration: \", props.OneTask.duration);\n  console.log(\"Date.now(): \", Date.now());\n  let timePrep = Date.now() + reTime;\n  const nextSecHandler = () => {\n    let writingTaskId = props.OneTask.id;\n    let responseId = props.responseId;\n    let paragraphText = formData.paragraphText;\n    if (paragraphText == \"\") {\n      alert(\"Enter some text in the box\");\n      return null;\n    }\n    addwritingtaskresponse({\n      writingTaskId,\n      responseId,\n      paragraphText,\n      props\n    });\n\n    // props.nextSecHandler();\n  };\n\n  console.log(\"paragraph: \", formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.oneWritingTask,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.writingTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", props.OneTask.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"  Time  remaining:\", /*#__PURE__*/_jsxDEV(Countdown, {\n            date: timePrep,\n            renderer: renderer,\n            onComplete: nextSecHandler\n          }, props.OneTask.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.nextSectionButton,\n          onClick: nextSecHandler,\n          children: \" NEXT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.textQuestionBoxes,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textQuestionBoxLeft,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"var(--themeColor)\",\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Read the following information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 8\n        }, this), props.OneTask.questionText1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textQuestionBoxRight,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.questionTextArea2,\n          children: props.OneTask.questionText2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          children: [\"Word Count: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: wordCount + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"paragraphText\",\n          type: \"text\",\n          onChange: handleChange,\n          className: classes.input_field_textarea,\n          style: {\n            fontSize: \"16px\",\n            padding: \"20px\"\n          },\n          placeholder: \"Dear Sir ..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }, this);\n};\n_s(OneWritingTask, \"yAHir/IQs7gdg5in9AXC3X9ZbFk=\");\n_c = OneWritingTask;\nexport default OneWritingTask;\nvar _c;\n$RefreshReg$(_c, \"OneWritingTask\");","map":{"version":3,"names":["useState","useEffect","classes","TextAreaInput","addwritingtaskresponse","InfoHeader","Countdown","jsxDEV","_jsxDEV","OneWritingTask","props","_s","wordCount","setWordCount","initialFormData","Object","freeze","paragraphText","formData","updateFormData","OneTask","id","handleChange","e","target","name","value","split","length","console","log","renderer","_ref","hours","minutes","seconds","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","color","paddingLeft","paddingRight","reTime","Number","duration","Date","now","timePrep","nextSecHandler","writingTaskId","responseId","alert","className","oneWritingTask","writingTitle","title","date","onComplete","type","nextSectionButton","onClick","textQuestionBoxes","textQuestionBoxLeft","marginBottom","questionText1","textQuestionBoxRight","questionTextArea2","questionText2","marginLeft","onChange","input_field_textarea","fontSize","padding","placeholder","_c","$RefreshReg$"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/OneWritingTask.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport classes from './WritingTest.module.css';\n\nimport {TextAreaInput} from '../CommonApps/FormInputObjects';\nimport {addwritingtaskresponse} from '../CommonApps/AllAPICalls';\n\nimport InfoHeader from './InfoHeader';\n\nimport Countdown from 'react-countdown';\n\nconst OneWritingTask=(props)=>{\n\n\n  const [wordCount, setWordCount] = useState(0);\n\n  const initialFormData = Object.freeze({\n        paragraphText: \"\",\n        });\n\n  const [formData, updateFormData] = useState(initialFormData);\n\n\n  useEffect(()=>{\n\n\n  updateFormData(initialFormData);\n\n  },[props.OneTask.id]);\n\n\n\n  const handleChange=(e)=>{\n\n\n\n      updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value,\n                });\n\n     setWordCount(wordCount=>formData.paragraphText.split(\" \").length);\n\n    }\n\n    console.log(\"formData: \", formData);\n\n\n     const renderer = ({ hours, minutes, seconds, completed }) => {\n      if (completed) {\n       // Render a completed state\n\n         return <div> Over </div>\n\n       } else {\n       // Render a countdown\n        if (minutes ===0){\n              return <span style={{background:\"red\", color:\"white\",paddingLeft:\"10px\", paddingRight:\"10px\"}}> {minutes}:{seconds} mins</span>;\n         } else{\n\n              return <span> {minutes}:{seconds} mins</span>;\n         }\n       }\n     };\n\n\n\n\n\n    let reTime = Number(props.OneTask.duration)*60*1000;\n    console.log(\"writing duration: \", props.OneTask.duration)\n    console.log(\"Date.now(): \", Date.now());\n \n    let timePrep = Date.now()+reTime ;\n\n\n    const nextSecHandler =()=>{\n\n      let writingTaskId = props.OneTask.id;\n      let responseId = props.responseId;\n      let paragraphText = formData.paragraphText; \n\n      if (paragraphText == \"\"){\n\n\t alert(\"Enter some text in the box\");\n\t return null;\n\n      }\n\n      addwritingtaskresponse({writingTaskId, responseId, paragraphText, props});\n\n      // props.nextSecHandler();\n\n\n    }    \n\n\n    console.log(\"paragraph: \", formData);\n\n\n\n\nreturn      <div className={classes.oneWritingTask}>\n              <div className={classes.writingTitle}>\n                        <span> <b> {props.OneTask.title} </b></span>\n                        <div>\n                           \n                           <span>  Time  remaining:\n                              <Countdown date={timePrep}\n                             renderer={renderer}\n                             onComplete={nextSecHandler}\n                             key={props.OneTask.id}\n                            />\n\n                           </span>\n\n                           <button type=\"button\" className={classes.nextSectionButton} onClick={nextSecHandler}> NEXT </button>\n                        </div>\n\n              </div>\n\n\n              <div className={classes.textQuestionBoxes}>\n              \n\t\t  <div className={classes.textQuestionBoxLeft}> \n\t\t     <div style={{color:\"var(--themeColor)\",marginBottom:\"20px\"}}><b> Read the following information</b></div> \n                     \n\t\t     {props.OneTask.questionText1}\n\t\t  </div>\n\n\n                  <div className={classes.textQuestionBoxRight}> \n\n\t\t  <div className={classes.questionTextArea2}>\n                     \n\t\t     {props.OneTask.questionText2}\n                  </div>\n\n                  <div style={{marginLeft:\"20px\"}}>\n                  Word Count: <span style={{color:\"red\"}}>{wordCount+1}</span>\n                  </div>\n\t\t <textarea\n\t            name=\"paragraphText\"\n                    type=\"text\"\n\t            onChange={handleChange}\n                    className={classes.input_field_textarea}\n                    style={{fontSize: \"16px\",padding:\"20px\"}}\n\t            placeholder=\"Dear Sir ..\"\n                   />\n\t\t  \n\t\t  </div>\n\n              </div>\n\n\n    </div>\n\n   \n\n}\n\n\nexport default OneWritingTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}