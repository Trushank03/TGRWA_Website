{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/SpeakingTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport InfoHeader from './InfoHeader';\nimport OneSpeakingTask from './OneSpeakingTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpeakingTest = props => {\n  _s();\n  const [paraSecNo, setParaSecNo] = useState(0);\n  const [OneParagraph, setOneParagraph] = useState(props.oneExamData.speakingTest !== null && props.oneExamData.speakingTest.speakingSections.length > 0 ? props.oneExamData.speakingTest.speakingSections[paraSecNo] : null);\n  const nextSecHandler = () => {\n    let paraNextNum = Number(paraSecNo + 1);\n    if (props.oneExamData.speakingTest !== null && props.oneExamData.speakingTest.speakingSections.length > 0 && paraNextNum < Number(props.oneExamData.speakingTest.speakingSections.length)) {\n      setOneParagraph(OneParagraph => props.oneExamData.speakingTest.speakingSections[paraSecNo + 1]);\n      setParaSecNo(paraSecNo => paraSecNo + 1);\n    }\n    if (props.oneExamData.speakingTest !== null && props.oneExamData.speakingTest.speakingSections.length > 0 && paraNextNum >= Number(props.oneExamData.speakingTest.speakingSections.length)) {\n      props.next();\n    }\n    if (props.oneExamData.speakingTest !== null && props.oneExamData.speakingTest.speakingSections.length === 0) {\n      props.next();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoHeader, {\n      info: \"You are taking speaking test now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this), OneParagraph !== null && /*#__PURE__*/_jsxDEV(OneSpeakingTask, {\n      OneTask: OneParagraph,\n      nextSecHandler: nextSecHandler,\n      responseId: props.responseId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }, this), OneParagraph === null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: \" No material in this section \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: nextSecHandler,\n        style: {\n          color: \"white\",\n          backgroundColor: \"blue\",\n          marginLeft: \"50px\",\n          marginTop: \"10px\",\n          cursor: \"pointer\"\n        },\n        children: \" Move to Next \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(SpeakingTest, \"oW66h9DJ5PlD8r5v4foeYtpvsE8=\");\n_c = SpeakingTest;\nexport default SpeakingTest;\nvar _c;\n$RefreshReg$(_c, \"SpeakingTest\");","map":{"version":3,"names":["useState","InfoHeader","OneSpeakingTask","jsxDEV","_jsxDEV","Fragment","_Fragment","SpeakingTest","props","_s","paraSecNo","setParaSecNo","OneParagraph","setOneParagraph","oneExamData","speakingTest","speakingSections","length","nextSecHandler","paraNextNum","Number","next","children","info","fileName","_jsxFileName","lineNumber","columnNumber","OneTask","responseId","style","marginLeft","type","onClick","color","backgroundColor","marginTop","cursor","_c","$RefreshReg$"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/SpeakingTest.js"],"sourcesContent":["import {useState} from 'react';\n\nimport InfoHeader from './InfoHeader';\n\nimport OneSpeakingTask from './OneSpeakingTask';\n\n\nconst SpeakingTest=(props)=>{\n\n    const [paraSecNo, setParaSecNo] = useState(0);\n\n    const [OneParagraph, setOneParagraph] = useState(\n            props.oneExamData.speakingTest !==null  && props.oneExamData.speakingTest.speakingSections.length > 0 ?\n             props.oneExamData.speakingTest.speakingSections[paraSecNo] : null\n    );\n\n\n\n\n   const nextSecHandler=()=>{\n\n\n        let paraNextNum=Number(paraSecNo+1);\n\n        if(props.oneExamData.speakingTest !==null  &&\n                props.oneExamData.speakingTest.speakingSections.length > 0 &&\n                paraNextNum < Number(props.oneExamData.speakingTest.speakingSections.length)\n          ){\n\n           setOneParagraph(OneParagraph=> props.oneExamData.speakingTest.speakingSections[paraSecNo+1]);\n           setParaSecNo(paraSecNo=>paraSecNo+1);\n        }\n\n\n        if(props.oneExamData.speakingTest !==null  &&\n                 props.oneExamData.speakingTest.speakingSections.length > 0 &&\n                 paraNextNum >= Number(props.oneExamData.speakingTest.speakingSections.length)){\n\n                props.next();\n\n        }\n\n\n        if(props.oneExamData.speakingTest !==null  && props.oneExamData.speakingTest.speakingSections.length === 0 ){\n\n         props.next();\n\n        }\n\n\n\n\n\n\n   }\n\n\n\n\n\n\n  return   <>\n\t\t<InfoHeader info=\"You are taking speaking test now!\"/>\n\t\t{ OneParagraph !==null && <OneSpeakingTask  OneTask={OneParagraph} \n\t                          nextSecHandler={nextSecHandler}\n\t                          responseId={props.responseId}\n\t\t                  />\n\t\t}\n\n\n                { OneParagraph ===null &&\n              <>\n              <div style={{marginLeft:\"50px\"}}> No material in this section </div>\n              <button type=\"button\" onClick={nextSecHandler} style={{ color:\"white\", backgroundColor:\"blue\",marginLeft:\"50px\",marginTop:\"10px\",cursor:\"pointer\"}}> Move to Next </button>\n             </>\n           }\n\n\n\n\n\n\n\t   </>\t\n\n}\n\n\nexport default SpeakingTest\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}