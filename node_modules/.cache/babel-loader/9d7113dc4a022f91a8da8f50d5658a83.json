{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/DiracAI-Services/Base_Website/src/TestSite/TestSite.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport classes from './TestSite.module.css';\nimport { TextInput } from './../CommonApps/FormInputObjects';\nimport { verifycandidatefortestlogin } from './../CommonApps/AllAPICalls';\nimport TestHomePage from './TestHomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestSite = () => {\n  _s();\n  const initialFormData = Object.freeze({\n    name: \"\",\n    password: \"\"\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n  const [testId, setTestId] = useState(null);\n  const [responseId, setResponseId] = useState(null);\n  const [testURL, setTestURL] = useState(null);\n  const [testPath, setTestPath] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    let testURL = window.location.href;\n    let pattern = '/takethistest/[1-9]+/[1-9]+/';\n    let result = testURL.match(pattern);\n    if (result) {\n      let urlarray = testURL.split(\"/\");\n      let response_Id = urlarray[urlarray.length - 2];\n      let test_Id = urlarray[urlarray.length - 3];\n      setTestId(test_Id);\n      setResponseId(response_Id);\n      setTestPath(result + \"/\");\n    }\n  }, []);\n  const handleChange = e => {\n    updateFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (formData.name === \"\") {\n      alert('please enter your name');\n      return null;\n    }\n    if (formData.password === \"\") {\n      alert('please enter password');\n      return null;\n    }\n    let examId = testId;\n    let password = formData.password;\n    let name = formData.name;\n    if (testId !== null && responseId !== null && password !== null) {\n      console.log(examId, \"--\", responseId, \"--\", password, \"--\", name);\n      verifycandidatefortestlogin({\n        examId,\n        responseId,\n        password,\n        name,\n        setAuthenticated\n      });\n    }\n  };\n  console.log(\"formData: \", formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.testSite,\n    children: [!authenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.homePageMessage,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome!! Are you ready to take the Test?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loginInfo,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            handleChange: handleChange,\n            label: \"Full Name\",\n            name: \"name\",\n            placeholder: \"e.g. John Stupak\",\n            requirement: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            handleChange: handleChange,\n            label: \"Test Unique password\",\n            name: \"password\",\n            placeholder: \"e.g. 123426\",\n            requirement: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"buttom\",\n            className: classes.submitButton,\n            children: \" Submit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true), authenticated && /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: testPath,\n        children: /*#__PURE__*/_jsxDEV(TestHomePage, {\n          examId: testId,\n          responseId: responseId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 8\n  }, this);\n};\n_s(TestSite, \"EB44EU4AOJQY8BlBy/U1a+Y4qfc=\");\n_c = TestSite;\nexport default TestSite;\nvar _c;\n$RefreshReg$(_c, \"TestSite\");","map":{"version":3,"names":["useState","useEffect","Route","Switch","useHistory","classes","TextInput","verifycandidatefortestlogin","TestHomePage","jsxDEV","_jsxDEV","Fragment","_Fragment","TestSite","_s","initialFormData","Object","freeze","name","password","formData","updateFormData","testId","setTestId","responseId","setResponseId","testURL","setTestURL","testPath","setTestPath","authenticated","setAuthenticated","window","location","href","pattern","result","match","urlarray","split","response_Id","length","test_Id","handleChange","e","target","value","handleSubmit","preventDefault","alert","examId","console","log","className","testSite","children","homePageMessage","fileName","_jsxFileName","lineNumber","columnNumber","loginInfo","onSubmit","label","placeholder","requirement","type","submitButton","exact","path","_c","$RefreshReg$"],"sources":["/home/bibhu/DiracAI-Services/Base_Website/src/TestSite/TestSite.js"],"sourcesContent":["import {useState,useEffect} from 'react';\nimport {Route,Switch, useHistory} from 'react-router-dom';\n\n\nimport classes from './TestSite.module.css';\n\nimport { TextInput } from './../CommonApps/FormInputObjects';\n\nimport {verifycandidatefortestlogin} from './../CommonApps/AllAPICalls';\n\nimport TestHomePage from './TestHomePage';\n\n\nconst TestSite=()=>{\n\n\n\n    const initialFormData = Object.freeze({\n        name: \"\",\n        password: \"\",\n        });\n\n    const [formData, updateFormData] = useState(initialFormData);\n\n\n    const [testId,setTestId] = useState(null);\n\n    const [responseId, setResponseId] = useState(null);\n\n    const [testURL, setTestURL] = useState(null);\n\n    const [testPath, setTestPath]= useState(null);\n\n \n    const [authenticated, setAuthenticated] = useState(false);\t\n\n\n    useEffect(()=>{\n\n     let testURL=window.location.href;\n     let pattern = '/takethistest/[1-9]+/[1-9]+/';\n     let result = testURL.match(pattern);\n\n\n     if (result) {\n       let urlarray=testURL.split(\"/\");\n\n\n       let response_Id = urlarray[urlarray.length-2];\n       let test_Id = urlarray[urlarray.length-3];\n\n\n       setTestId(test_Id);\n       setResponseId(response_Id);\n       setTestPath(result+\"/\");\n     }\n\n    },[]);\n\n\n\n\n\n\n\n   const handleChange=(e)=>{\n    updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value,\n                });\n \n   }\n\n\n\n   const handleSubmit=(e)=>{\n    e.preventDefault();\n\n     if(formData.name === \"\" ){\n            alert('please enter your name');\n                        return null;\n          }\n  \n     if(formData.password === \"\" ){\n            alert('please enter password');\n                        return null;\n          }\n\t   \n     let examId=testId;\n    \n     let password=formData.password;\t\n     let name = formData.name;\t   \n     if(testId !==null && responseId !==null && password !==null){\n\t  console.log(examId,\"--\", responseId,\"--\", password,\"--\", name);   \n          verifycandidatefortestlogin({examId, responseId, password,name, setAuthenticated});\t   \n     }\n\n   }\n\n\n\n\n\n  console.log(\"formData: \",formData );\n\n\n\nreturn <div className={classes.testSite}>\n\n\n       { !authenticated && <>\t\t\n         <div className={classes.homePageMessage}> \n\t\t<h2>Welcome!! Are you ready to take the Test?</h2> \n         </div>\n\n         <div className={classes.loginInfo}>\n\t     <form  onSubmit={handleSubmit}>  \n             <TextInput handleChange={handleChange}\n                  label=\"Full Name\"\n                  name=\"name\"\n                  placeholder=\"e.g. John Stupak\"\n                  requirement=\"*\"\n                  />\n\n              <TextInput handleChange={handleChange}\n                  label=\"Test Unique password\"\n                  name=\"password\"\n                  placeholder=\"e.g. 123426\"\n                  requirement=\"*\"\n                  />\n\n\n             <button type=\"buttom\" className={classes.submitButton}> Submit </button>\n\n\n\t     </form> \n         </div>\n        </>\n       }\n\n\n\n      { authenticated && \n      <Switch>\n           <Route exact path={testPath} >\n                   <TestHomePage examId={testId} responseId={responseId}/>\n           </Route>\n      </Switch>\n      }\n\n\n\n\n\n\n</div>\n\n\n}\n\nexport default TestSite;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}