{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/WritingTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport classes from './WritingTest.module.css';\nimport OneWritingTask from './OneWritingTask';\nimport InfoHeader from './InfoHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WritingTest = props => {\n  _s();\n  const [paraSecNo, setParaSecNo] = useState(0);\n  const [OneParagraph, setOneParagraph] = useState(props.oneExamData.writingTest !== null && props.oneExamData.writingTest.writingSections.length > 0 ? props.oneExamData.writingTest.writingSections[paraSecNo] : null);\n  const nextSecHandler = () => {\n    let paraNextNum = Number(paraSecNo + 1);\n    if (props.oneExamData.writingTest !== null && props.oneExamData.writingTest.writingSections.length > 0 && paraNextNum < Number(props.oneExamData.writingTest.writingSections.length)) {\n      setOneParagraph(OneParagraph => props.oneExamData.writingTest.writingSections[paraSecNo + 1]);\n      setParaSecNo(paraSecNo => paraSecNo + 1);\n    }\n    if (props.oneExamData.writingTest !== null && props.oneExamData.writingTest.writingSections.length > 0 && paraNextNum >= Number(props.oneExamData.writingTest.writingSections.length)) {\n      props.next();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoHeader, {\n      info: \"You are taking reading test now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), OneParagraph !== null && /*#__PURE__*/_jsxDEV(OneWritingTask, {\n      OneTask: OneParagraph,\n      rerender: props.rerender,\n      nextSecHandler: nextSecHandler,\n      responseId: props.responseId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true);\n};\n_s(WritingTest, \"5f9AheKKAslqKdgk5a6C9TrpHBg=\");\n_c = WritingTest;\nexport default WritingTest;\nvar _c;\n$RefreshReg$(_c, \"WritingTest\");","map":{"version":3,"names":["useState","classes","OneWritingTask","InfoHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","WritingTest","props","_s","paraSecNo","setParaSecNo","OneParagraph","setOneParagraph","oneExamData","writingTest","writingSections","length","nextSecHandler","paraNextNum","Number","next","children","info","fileName","_jsxFileName","lineNumber","columnNumber","OneTask","rerender","responseId","_c","$RefreshReg$"],"sources":["/home/bibhu/CelpipSoftware/celpipSW/src/TestSite/WritingTest.js"],"sourcesContent":["import {useState} from 'react';\nimport classes from './WritingTest.module.css';\n\n\nimport OneWritingTask from './OneWritingTask';\nimport InfoHeader from './InfoHeader';\n\n\nconst WritingTest=(props)=>{\n\n\n\n    const [paraSecNo, setParaSecNo] = useState(0);\n\n    const [OneParagraph, setOneParagraph] = useState(\n            props.oneExamData.writingTest !==null  && props.oneExamData.writingTest.writingSections.length > 0 ?\n             props.oneExamData.writingTest.writingSections[paraSecNo] : null\n    );\n\n\n\n   const nextSecHandler=()=>{\n\n       let paraNextNum=Number(paraSecNo+1);\n\n        if(props.oneExamData.writingTest !==null  &&\n                props.oneExamData.writingTest.writingSections.length > 0 &&\n                paraNextNum < Number(props.oneExamData.writingTest.writingSections.length)\n          ){\n\n           setOneParagraph(OneParagraph=> props.oneExamData.writingTest.writingSections[paraSecNo+1]);\n           setParaSecNo(paraSecNo=>paraSecNo+1);\n        }\n\n\n        if(props.oneExamData.writingTest !==null  &&\n                props.oneExamData.writingTest.writingSections.length > 0 &&\n                 paraNextNum >= Number(props.oneExamData.writingTest.writingSections.length)){\n\n                props.next();\n\n        }\n\n\n\n\n\n\n\n   }\n\n\n\n\n    return  <>  \n\t\t<InfoHeader info=\"You are taking reading test now!\"/>\n\t      { OneParagraph !==null &&\t<OneWritingTask  OneTask={OneParagraph} \n\t                         rerender={props.rerender} \n\t                         nextSecHandler={nextSecHandler}\n\t                         responseId={props.responseId}\n\t\t                 />\n           \n              }\n\n\n\t    </>\t\n\n\n}\n\n\nexport default WritingTest\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,OAAO,MAAM,0BAA0B;AAG9C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,MAAMC,WAAW,GAAEC,KAAK,IAAG;EAAAC,EAAA;EAIvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CACxCS,KAAK,CAACM,WAAW,CAACC,WAAW,KAAI,IAAI,IAAKP,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACC,MAAM,GAAG,CAAC,GACjGT,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACN,SAAS,CAAC,GAAG,IAAI,CACvE;EAIF,MAAMQ,cAAc,GAACA,CAAA,KAAI;IAErB,IAAIC,WAAW,GAACC,MAAM,CAACV,SAAS,GAAC,CAAC,CAAC;IAElC,IAAGF,KAAK,CAACM,WAAW,CAACC,WAAW,KAAI,IAAI,IAChCP,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACC,MAAM,GAAG,CAAC,IACxDE,WAAW,GAAGC,MAAM,CAACZ,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACC,MAAM,CAAC,EAC/E;MAEAJ,eAAe,CAACD,YAAY,IAAGJ,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACN,SAAS,GAAC,CAAC,CAAC,CAAC;MAC1FC,YAAY,CAACD,SAAS,IAAEA,SAAS,GAAC,CAAC,CAAC;IACvC;IAGA,IAAGF,KAAK,CAACM,WAAW,CAACC,WAAW,KAAI,IAAI,IAChCP,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACC,MAAM,GAAG,CAAC,IACvDE,WAAW,IAAIC,MAAM,CAACZ,KAAK,CAACM,WAAW,CAACC,WAAW,CAACC,eAAe,CAACC,MAAM,CAAC,EAAC;MAE7ET,KAAK,CAACa,IAAI,EAAE;IAEpB;EAQL,CAAC;EAKA,oBAAQjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACVlB,OAAA,CAACF,UAAU;MAACqB,IAAI,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EAC9Cf,YAAY,KAAI,IAAI,iBAAIR,OAAA,CAACH,cAAc;MAAE2B,OAAO,EAAEhB,YAAa;MAC9CiB,QAAQ,EAAErB,KAAK,CAACqB,QAAS;MACzBX,cAAc,EAAEA,cAAe;MAC/BY,UAAU,EAAEtB,KAAK,CAACsB;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC;EAAA,gBAKb;AAGR,CAAC;AAAAlB,EAAA,CA5DKF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA+DjB,eAAeA,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}